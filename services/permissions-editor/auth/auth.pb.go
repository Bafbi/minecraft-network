// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/auth.proto

package auth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuthRequest represents a permission check request.
// It now only contains identifiers for the PDP to fetch metadata.
type AuthRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	PlayerUuid string                 `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	PlayerName string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"` // For logging/auditing
	// The server the action is related to (e.g., target server for connection, server where command is executed).
	// Can be empty if action is network-wide and not server-specific.
	ServerName string `protobuf:"bytes,3,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	// The action being performed (e.g., "connect", "command:/kick", "command:/ban")
	Action string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	// The resource the action is being performed on (e.g., "server:survival", "command:kick")
	Resource      string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_proto_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

func (x *AuthRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *AuthRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *AuthRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuthRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

// AuthResponse contains the result of a permission check.
type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Optional message for debugging/reason
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_proto_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_proto_auth_proto_rawDescGZIP(), []int{1}
}

func (x *AuthResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *AuthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// PolicyRule (remains the same as metadata is pulled by PDP now)
type PolicyRule struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetAction              string                 `protobuf:"bytes,2,opt,name=target_action,json=targetAction,proto3" json:"target_action,omitempty"`
	TargetResource            string                 `protobuf:"bytes,3,opt,name=target_resource,json=targetResource,proto3" json:"target_resource,omitempty"`
	PlayerConditionExpression string                 `protobuf:"bytes,4,opt,name=player_condition_expression,json=playerConditionExpression,proto3" json:"player_condition_expression,omitempty"` // e.g., "r.player['role'] == 'admin'"
	ServerConditionExpression string                 `protobuf:"bytes,5,opt,name=server_condition_expression,json=serverConditionExpression,proto3" json:"server_condition_expression,omitempty"` // e.g., "r.server['current_players'] < r.server['max_player']"
	Effect                    string                 `protobuf:"bytes,6,opt,name=effect,proto3" json:"effect,omitempty"`                                                                          // "allow" or "deny"
	Priority                  int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PolicyRule) Reset() {
	*x = PolicyRule{}
	mi := &file_proto_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyRule) ProtoMessage() {}

func (x *PolicyRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyRule.ProtoReflect.Descriptor instead.
func (*PolicyRule) Descriptor() ([]byte, []int) {
	return file_proto_auth_proto_rawDescGZIP(), []int{2}
}

func (x *PolicyRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PolicyRule) GetTargetAction() string {
	if x != nil {
		return x.TargetAction
	}
	return ""
}

func (x *PolicyRule) GetTargetResource() string {
	if x != nil {
		return x.TargetResource
	}
	return ""
}

func (x *PolicyRule) GetPlayerConditionExpression() string {
	if x != nil {
		return x.PlayerConditionExpression
	}
	return ""
}

func (x *PolicyRule) GetServerConditionExpression() string {
	if x != nil {
		return x.ServerConditionExpression
	}
	return ""
}

func (x *PolicyRule) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

func (x *PolicyRule) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// PolicyManagementRequest for adding/removing policies
type PolicyManagementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*PolicyRule          `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyManagementRequest) Reset() {
	*x = PolicyManagementRequest{}
	mi := &file_proto_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyManagementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyManagementRequest) ProtoMessage() {}

func (x *PolicyManagementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyManagementRequest.ProtoReflect.Descriptor instead.
func (*PolicyManagementRequest) Descriptor() ([]byte, []int) {
	return file_proto_auth_proto_rawDescGZIP(), []int{3}
}

func (x *PolicyManagementRequest) GetRules() []*PolicyRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

// PolicyManagementResponse
type PolicyManagementResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyManagementResponse) Reset() {
	*x = PolicyManagementResponse{}
	mi := &file_proto_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyManagementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyManagementResponse) ProtoMessage() {}

func (x *PolicyManagementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyManagementResponse.ProtoReflect.Descriptor instead.
func (*PolicyManagementResponse) Descriptor() ([]byte, []int) {
	return file_proto_auth_proto_rawDescGZIP(), []int{4}
}

func (x *PolicyManagementResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PolicyManagementResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_auth_proto protoreflect.FileDescriptor

const file_proto_auth_proto_rawDesc = "" +
	"\n" +
	"\x10proto/auth.proto\x12\x04auth\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xa4\x01\n" +
	"\vAuthRequest\x12\x1f\n" +
	"\vplayer_uuid\x18\x01 \x01(\tR\n" +
	"playerUuid\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x1f\n" +
	"\vserver_name\x18\x03 \x01(\tR\n" +
	"serverName\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\tR\bresource\"B\n" +
	"\fAuthResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x9e\x02\n" +
	"\n" +
	"PolicyRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rtarget_action\x18\x02 \x01(\tR\ftargetAction\x12'\n" +
	"\x0ftarget_resource\x18\x03 \x01(\tR\x0etargetResource\x12>\n" +
	"\x1bplayer_condition_expression\x18\x04 \x01(\tR\x19playerConditionExpression\x12>\n" +
	"\x1bserver_condition_expression\x18\x05 \x01(\tR\x19serverConditionExpression\x12\x16\n" +
	"\x06effect\x18\x06 \x01(\tR\x06effect\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\"A\n" +
	"\x17PolicyManagementRequest\x12&\n" +
	"\x05rules\x18\x01 \x03(\v2\x10.auth.PolicyRuleR\x05rules\"N\n" +
	"\x18PolicyManagementResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xa9\x02\n" +
	"\vAuthService\x128\n" +
	"\x0fCheckPermission\x12\x11.auth.AuthRequest\x1a\x12.auth.AuthResponse\x12J\n" +
	"\tAddPolicy\x12\x1d.auth.PolicyManagementRequest\x1a\x1e.auth.PolicyManagementResponse\x12M\n" +
	"\fRemovePolicy\x12\x1d.auth.PolicyManagementRequest\x1a\x1e.auth.PolicyManagementResponse\x12E\n" +
	"\fListPolicies\x12\x16.google.protobuf.Empty\x1a\x1d.auth.PolicyManagementRequestB\bZ\x06.;authb\x06proto3"

var (
	file_proto_auth_proto_rawDescOnce sync.Once
	file_proto_auth_proto_rawDescData []byte
)

func file_proto_auth_proto_rawDescGZIP() []byte {
	file_proto_auth_proto_rawDescOnce.Do(func() {
		file_proto_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_auth_proto_rawDesc), len(file_proto_auth_proto_rawDesc)))
	})
	return file_proto_auth_proto_rawDescData
}

var file_proto_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_auth_proto_goTypes = []any{
	(*AuthRequest)(nil),              // 0: auth.AuthRequest
	(*AuthResponse)(nil),             // 1: auth.AuthResponse
	(*PolicyRule)(nil),               // 2: auth.PolicyRule
	(*PolicyManagementRequest)(nil),  // 3: auth.PolicyManagementRequest
	(*PolicyManagementResponse)(nil), // 4: auth.PolicyManagementResponse
	(*emptypb.Empty)(nil),            // 5: google.protobuf.Empty
}
var file_proto_auth_proto_depIdxs = []int32{
	2, // 0: auth.PolicyManagementRequest.rules:type_name -> auth.PolicyRule
	0, // 1: auth.AuthService.CheckPermission:input_type -> auth.AuthRequest
	3, // 2: auth.AuthService.AddPolicy:input_type -> auth.PolicyManagementRequest
	3, // 3: auth.AuthService.RemovePolicy:input_type -> auth.PolicyManagementRequest
	5, // 4: auth.AuthService.ListPolicies:input_type -> google.protobuf.Empty
	1, // 5: auth.AuthService.CheckPermission:output_type -> auth.AuthResponse
	4, // 6: auth.AuthService.AddPolicy:output_type -> auth.PolicyManagementResponse
	4, // 7: auth.AuthService.RemovePolicy:output_type -> auth.PolicyManagementResponse
	3, // 8: auth.AuthService.ListPolicies:output_type -> auth.PolicyManagementRequest
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_auth_proto_init() }
func file_proto_auth_proto_init() {
	if File_proto_auth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_auth_proto_rawDesc), len(file_proto_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_auth_proto_goTypes,
		DependencyIndexes: file_proto_auth_proto_depIdxs,
		MessageInfos:      file_proto_auth_proto_msgTypes,
	}.Build()
	File_proto_auth_proto = out.File
	file_proto_auth_proto_goTypes = nil
	file_proto_auth_proto_depIdxs = nil
}
